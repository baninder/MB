version: '3.8'

services:
  # IoT Sensor Data API
  iot-sensor-api:
    build:
      context: .
      dockerfile: IoTSensorDataProcessor.Api/Dockerfile
    ports:
      - "5059:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__CosmosDb=AccountEndpoint=https://cosmos-emulator:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==;DisableServerCertificateValidation=true
      - Mqtt__BrokerHost=mqtt-broker
      - Mqtt__BrokerPort=1883
      - Serilog__MinimumLevel__Default=Information
    depends_on:
      - cosmos-emulator
      - mqtt-broker
    networks:
      - iot-network
    volumes:
      - ./logs/api:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # IoT Sensor Data Worker
  iot-sensor-worker:
    build:
      context: .
      dockerfile: IoTSensorDataProcessor.Worker/Dockerfile
    environment:
      - DOTNET_ENVIRONMENT=Production
      - ConnectionStrings__CosmosDb=AccountEndpoint=https://cosmos-emulator:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==;DisableServerCertificateValidation=true
      - Mqtt__BrokerHost=mqtt-broker
      - Mqtt__BrokerPort=1883
      - SensorGeneration__IntervalSeconds=5
      - SensorGeneration__DeviceCount=8
      - SensorGeneration__EnableAnomalies=true
      - Serilog__MinimumLevel__Default=Information
    depends_on:
      - cosmos-emulator
      - mqtt-broker
    networks:
      - iot-network
    volumes:
      - ./logs/worker:/app/logs
    restart: unless-stopped

  # Azure Cosmos DB Emulator
  cosmos-emulator:
    image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest
    ports:
      - "8081:8081"
      - "10251:10251"
      - "10252:10252"
      - "10253:10253"
      - "10254:10254"
    environment:
      - AZURE_COSMOS_EMULATOR_PARTITION_COUNT=3
      - AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE=true
      - AZURE_COSMOS_EMULATOR_IP_ADDRESS_OVERRIDE=0.0.0.0
    networks:
      - iot-network
    volumes:
      - cosmos-data:/data/db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:8081/_explorer/index.html"]
      interval: 60s
      timeout: 30s
      retries: 5

  # MQTT Broker (Eclipse Mosquitto)
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - iot-network
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/logs:/mosquitto/log
    restart: unless-stopped
    command: mosquitto -c /mosquitto/config/mosquitto.conf

  # MQTT Web Client (Optional - for testing)
  mqtt-web-client:
    image: eclipse-mosquitto:2.0
    ports:
      - "9002:9001"
    networks:
      - iot-network
    volumes:
      - ./mqtt/web-config:/mosquitto/config
    restart: unless-stopped
    command: mosquitto -c /mosquitto/config/websockets.conf

  # Redis Cache (Optional - for SignalR backplane)
  redis-cache:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - iot-network
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    networks:
      - iot-network
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  # Grafana (Dashboards)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - iot-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  cosmos-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  iot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
